name: Deploy to Vercel

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install -g http-server

      - name: Validate HTML
        run: |
          # Verificar se arquivos principais existem
          test -f index.html
          test -f script.js
          test -f styles.css
          test -f config.js

      - name: Check JavaScript syntax
        run: |
          node -c script.js
          node -c config.js

      - name: Validate configuration
        run: |
          # Verificar se config.js tem estrutura b√°sica
          grep -q "SUPABASE_CONFIG" config.js
          grep -q "OPENAI_CONFIG" config.js

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Update deployment status
        run: |
          echo "‚úÖ Deploy realizado com sucesso!"
          echo "üöÄ Aplica√ß√£o dispon√≠vel em produ√ß√£o"

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Deployment Success
        if: needs.deploy-production.result == 'success'
        run: |
          echo "üéâ Deploy do ND Express realizado com sucesso!"
          echo "üì± Aplica√ß√£o atualizada em produ√ß√£o"
          echo "üîó Acesse: https://nd-express.vercel.app"

      - name: Deployment Failed
        if: needs.deploy-production.result == 'failure'
        run: |
          echo "‚ùå Falha no deploy do ND Express"
          echo "üîç Verifique os logs para mais detalhes"
          exit 1
